### üìÑ Cadastro de eBooks - Parte 2

#### üß© **Descri√ß√£o da Funcionalidade**

 A segunda parte do cadastro de eBooks consiste na funcionalidade de **adicionar, remover, reordenar e excluir atividades** dentro de um eBook personalizado. Cada eBook conter√° um **array de IDs de atividades**, e a ordem desses IDs √© **essencial**, pois define a sequ√™ncia exata com que as atividades aparecer√£o no documento final. A implementa√ß√£o permitir√° ao usu√°rio interagir com esse array de forma intuitiva, garantindo flexibilidade e controle total sobre a montagem do conte√∫do do eBook.
#### ‚úÖ **Requisitos Funcionais**

1. Criar uma a tela client/src/pages/CategoriasPage.tsx
	- Listar todas as categorias cadastradas
	- Usar o componente existente client/src/components/categorias/CategoriaCard.tsx
	- Ao selecionar a categoria deve navegar para tela existente client/src/pages/AtividadesPorCategoriaPage.tsx
	
2. Criar componente client/src/components/ebooks/AtividadeEbookCard.tsx
	- Representa uma atividade dentro de um ebook.
	- Componente mostra a imagem da atividade no formato A4.
	- Na lateral direita da imagem est√£o as a√ß√µes aplic√°veis: mover para cima, mover para baixo e excluir.
	
3. **Adicionar Atividade ao eBook**
    - Permitir selecionar uma atividade dispon√≠vel no cat√°logo.
    - Adicionar o ID da atividade ao final do array `atividades` do eBook selecionado.
    - Na tela client/src/pages/DetalheEBookPage.tsx ao clicar no bot√£o "Adicionar Atividades" deve navegar para nova tela client/src/pages/CategoriasPage.tsx
    - O componente client/src/components/atividades/AtividadeCard.tsx deve exibir visualmente quando a atividade pertence ou n√£o ao ebook selecionado. Usar bordar verdes ao redor do componente e colocar um √≠cone de check branco dentro um c√≠rculo verde na parte superior direita.
    - O componente client/src/components/atividades/AtividadeCard.tsx funciona como um toggle. Caso a atividade n√£o esteja no eBook, ao clicar no componente, a atividade ser√° adicionada.
    - Quando uma atividade for adicionada deve alterar a quantidade de atividades no componente de ebook selecionado no cabe√ßalho da aplica√ß√£o
        
4. **Remover Atividade do eBook**
    - Permitir a exclus√£o de qualquer atividade do array de IDs.
    - Atualizar a lista imediatamente ap√≥s a remo√ß√£o.
    - O componente client/src/components/atividades/AtividadeCard.tsx funciona como um toggle. Caso a atividade esteja no eBook, ao clicar no componente, a atividade ser√° removida.
    - O componente client/src/components/ebooks/AtividadeEbookCard.tsx tamb√©m possui a op√ß√£o de excluir a atividade.
    - Quando uma atividade for removida deve alterar a quantidade de atividades no componente de ebook selecionado no cabe√ßalho da aplica√ß√£o
        
5. **Reordenar Atividades**
    - Persistir a nova ordem ap√≥s altera√ß√£o.
    - O componente client/src/components/ebooks/AtividadeEbookCard.tsx possui as a√ß√µes de mover para cima e mover para baixo alterando a posi√ß√£o dos IDs no array.
    - A primeira atividade n√£o pode ser movida para cima
    - A √∫ltima atividade n√£o pode ser movida para baixo
        
6. **Visualiza√ß√£o da Ordem Atual**
    - Na tela client/src/pages/DetalheEBookPage.tsx mostrar visualmente as atividades (componente client/src/components/ebooks/AtividadeEbookCard.tsx) vinculadas na ordem atual.
        
7. **Persist√™ncia de Dados**
    - Qualquer altera√ß√£o (adi√ß√£o, remo√ß√£o ou reordena√ß√£o) deve ser imediatamente persistida no banco (Firestore).
        
8. **Valida√ß√£o de Dados**
    - Evitar IDs duplicados dentro do mesmo eBook.
    - Garantir que apenas atividades v√°lidas (existentes no cat√°logo) possam ser adicionadas.
    
#### üìÅ **Pastas e Arquivos Permitidos**

```
client/src/components/ebooks (pasta para os componentes)

client/src/components/ebooks/AtividadeEbookCard.tsx (criar)
client/src/pages/CategoriasPage.tsx (criar)

client/src/components/atividades/AtividadeCard.tsx (alterar)
client/src/pages/DetalheEBookPage.tsx (alterar)

client/src/contexts (criar contexto se necess√°rio)
client/src/hooks (criar hooks se necess√°rio)
```

Observa√ß√£o: as informa√ß√µes de ebooks devem ser acess√≠veis e compartilhadas em todas as telas da aplica√ß√£o

#### üîí **Restri√ß√µes de Seguran√ßa e Boas Pr√°ticas**

- N√£o modifique arquivos fora dos listados acima.
- N√£o crie nem modifique tabelas de banco de dados sem solicita√ß√£o expl√≠cita.
- N√£o apague ou sobrescreva dados sem instru√ß√£o clara.
- Toda vari√°vel sens√≠vel (como chaves de API, tokens ou URLs protegidas) deve ser armazenada em arquivos `.env` ou equivalente.
- Sempre perguntar antes de instalar bibliotecas externas ou adicionar depend√™ncias.
- Todas as opera√ß√µes que envolvam escrita ou leitura em banco de dados devem ser explicitamente solicitadas no prompt principal.
- Evitar comandos destrutivos ou irrevers√≠veis, como `DELETE`, exceto sob instru√ß√£o expl√≠cita.
- Assegure-se de n√£o expor dados sens√≠veis no frontend.

#### üìå **Orienta√ß√µes de Desenvolvimento Padr√£o**

- Usar nomes claros e sem√¢nticos para vari√°veis e fun√ß√µes.
- Dividir responsabilidades entre componentes (ex: l√≥gica de autentica√ß√£o separada da UI).
- Comentar trechos de l√≥gica complexa.
- Priorizar c√≥digo limpo, reutiliz√°vel e organizado.
- Validar entradas do usu√°rio sempre que aplic√°vel.
- Preferir fun√ß√µes puras e evitar efeitos colaterais n√£o controlados.
- Priorizar acessibilidade e compatibilidade responsiva na interface.

#### Informa√ß√µes sobre o Banco de dados

Os dados de eBooks s√£o armazenados na cole√ß√£o `/usuarios/{userId}/ebooks/{ebookId}`

- Regras atuais do Firestore

```
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /usuarios/{userId} {      
      allow read, write: if request.auth != null && request.auth.uid == userId;
    
    	match /ebooks/{ebookId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

		match /assinaturas/{email} {
      allow read: if request.auth != null && request.auth.token.email == email;
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
```


#### Modelo para eBook

```json
{
	"id": "3956fdee-4ef7-403a-bd35-d1d155dca974",
	"nome": "Atividades de F√©rias do Jo√£o",
	"data": "2025-12-23T22:30:00",
	"atividades": [
		"f0eed885-7112-4b4d-b124-054821a54e44"
	]
}
```